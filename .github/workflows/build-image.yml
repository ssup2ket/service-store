name: build-image

on:
  workflow_run:
    workflows: [test-integration]
    branches: [master]
    types: [completed]
  release:
    types: [published]

jobs:
      
  build:
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.release.tag_name != ''}}
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Prepare
      id: prepare
      run: |
        DOCKER_IMAGE=ssup2/ssup2ket-store
        DOCKER_PLATFORMS=linux/amd64,linux/arm64
        VERSION=""
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION} --tag ${DOCKER_IMAGE}:latest"
        else
          VERSION=branch-${GITHUB_REF#refs/heads/}
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION} --tag ${DOCKER_IMAGE}:commit-${GITHUB_SHA::8}"
        fi
        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
          --build-arg VERSION=${VERSION} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=${GITHUB_SHA::8} \
          ${TAGS} --file ./Dockerfile .

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 

    - name: Build store service
      uses: gradle/gradle-build-action@v2
      with:
        arguments: bootJar
    
    - name: Build image
      run: |
        docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
     
    - name: Login to DockerHub
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_SSUP2_ID }}
        password: ${{ secrets.DOCKER_HUB_SSUP2_PASSWORD }}
     
    - name: Push image
      if: success() && github.event_name != 'pull_request'
      run: |
        docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
     
    - name: Inspect image
      if: always() && github.event_name != 'pull_request'
      run: |
        docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}